[build-system]
requires = ["flit_core >=3.7,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "whisper-stream"
dynamic = ["version"]
description = '"Inferencing Endpoint on Whisper"'
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
keywords = ["whisper", "jax", "pytorch"]
authors = [{ name = "krishnakumar", email = "ksquarekumar@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "whisper-jax[endpoint] @ git+https://github.com/sanchit-gandhi/whisper-jax.git@45bff9df78a6a4f04144f405c74cf0ffa4c5fb52",
  "cached-property",
  "bentoml[triton]"
]

[project.optional-dependencies]
dev = [
  "whisper-stream",
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
  "pre-commit>=3.3.3",
  "commitizen",
  "watchdog",
]
test = ["coverage[toml]>=6.5", "pytest"]

[project.urls]
Documentation = "https://github.com/ksquarekumar/whisper-stream#readme"
Issues = "https://github.com/ksquarekumar/whisper-stream/issues"
Source = "https://github.com/ksquarekumar/whisper-stream"

[tool.black]
target-version = ["py310"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py310"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]
fix = true

[tool.ruff.isort]
known-first-party = ["whisper_stream"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["whisper_stream", "tests"]
branch = true
parallel = true
omit = ["whisper_stream/__about__.py"]

[tool.coverage.paths]
whisper_stream = ["whisper_stream", "*/whisper-stream/whisper_stream"]
tests = ["tests", "*/whisper-stream/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[project.scripts]
get_version = "whisper_stream.__init__:get_version"
